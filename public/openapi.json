{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1",
    "title": "Hexagonal Playground API",
    "description": "RESTful API for managing soccer leagues and illustrating hexagonal architecture",
    "contact": {
      "name": "Marius Klocke",
      "email": "marius.klocke@gmail.com"
    }
  },
  "tags": [
    {
      "name": "team"
    },
    {
      "name": "season"
    },
    {
      "name": "ranking"
    },
    {
      "name": "match"
    },
    {
      "name": "pitch"
    }
  ],
  "paths": {
    "/team": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Finds all teams",
        "responses": {
          "200": {
            "description": "list of teams",
            "content": {
              "application/json" : {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Creates a new team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Invalid team name"
          }
        }
      }
    },
    "/team/{id}": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Finds a single team by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single team",
            "content": {
              "application/json" : {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Delete a single team by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          }
        }
      }
    },
    "/team/{id}/rename": {
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Renames a single team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Team has been successfully renamed"
          },
          "404": {
            "description": "Team could not be found"
          }
        }
      }
    },
    "/season": {
      "get": {
        "tags": [
          "season"
        ],
        "summary": "Find all seasons",
        "responses": {
          "200": {
            "description": "List of seasons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/season"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "season"
        ],
        "summary": "Create a new season",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/season/{id}/team": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Find all teams related to a single season",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of teams related to the season",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/season/{id}/ranking": {
      "get": {
        "tags": [
          "ranking"
        ],
        "summary": "Returns the current season ranking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current season ranking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ranking"
                }
              }
            }
          }
        }
      }
    },
    "/season/{id}/matches": {
      "post": {
        "tags": [
          "match"
        ],
        "summary": "Creates matches for a given season",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      },
      "get": {
        "tags": [
          "match"
        ],
        "summary": "Find matches",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_day",
            "in": "query",
            "description": "Number identifying the matchday",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of matches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/match"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/season/{id}": {
      "delete": {
        "tags": [
          "season"
        ],
        "summary": "Delete a single season",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          }
        }
      },
      "get": {
        "tags": ["season"],
        "summary": "Finds a single season",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contains a single season object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/season"
                }
              }
            }
          },
          "404": {
            "description": "Season could not be found"
          }
        }
      }
    },
    "/season/{id}/start": {
      "post": {
        "tags": ["season"],
        "summary": "Starts a season",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of season",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Season has been successfully started"
          },
          "400": {
            "description": "Season cannot be started due to an invalid state"
          },
          "404": {
            "description": "Season could not be found"
          }
        }
      }
    },
    "/match/{id}": {
      "get": {
        "tags": [
          "match"
        ],
        "summary": "Find a single match by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "match id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contains a single match object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/match"
                }
              }
            }
          },
          "404": {
            "description": "Match could not be found"
          }
        }
      }
    },
    "/match/{id}/result": {
      "post": {
        "tags": [
          "match"
        ],
        "summary": "Submit a matches result",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "match id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "home_score",
                  "guest_score"
                ],
                "properties": {
                  "home_score": {
                    "type": "integer"
                  },
                  "guest_score": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/match/{id}/cancellation": {
      "post": {
        "tags": [
          "match"
        ],
        "summary": "Cancel a match",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "match id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/match/{id}/kickoff": {
      "post": {
        "tags": [
          "match"
        ],
        "summary": "Schedule a match",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "match id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "kickoff"
                ],
                "properties": {
                  "kickoff": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/match/{id}/location": {
      "post": {
        "tags": [
          "match"
        ],
        "summary": "Locate a match on a pitch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "match id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pitch_id"
                ],
                "properties": {
                  "pitch_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/pitch": {
      "get": {
        "tags": [
          "pitch"
        ],
        "summary": "Find all pitches",
        "responses": {
          "200": {
            "description": "Array of pitches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pitch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "pitch"
        ],
        "summary": "Creates a new pitch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "label"
                ],
                "properties": {
                  "label": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Operation successful"
          }
        }
      }
    },
    "/pitch/{id}": {
      "get": {
        "tags": [
          "pitch"
        ],
        "summary": "Find a single pitch by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pitch id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contains a single pitch object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pitch"
                }
              }
            }
          },
          "404": {
            "description": "Pitch could not be found"
          }
        }
      },
      "delete": {
        "tags": [
          "pitch"
        ],
        "summary": "Delete a single pitch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pitch id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "season": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["preparation", "progress", "ended"]
          }
        }
      },
      "match": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "season_id": {
            "type": "string"
          },
          "home_team_id": {
            "type": "string"
          },
          "guest_team_id": {
            "type": "string"
          },
          "pitch_id": {
            "type": "string"
          },
          "match_day": {
            "type": "integer"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time"
          },
          "home_score": {
            "type": "integer"
          },
          "guest_score": {
            "type": "integer"
          }
        }
      },
      "pitch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "location_longitude": {
            "type": "number"
          },
          "location_latitude": {
            "type": "number"
          }
        }
      },
      "ranking": {
        "type": "object",
        "properties": {
          "season_id": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ranking_position"
            }
          }
        }
      },
      "ranking_position": {
        "type": "object",
        "properties": {
          "season_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "sort_index": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "matches": {
            "type": "integer"
          },
          "wins": {
            "type": "integer"
          },
          "draws": {
            "type": "integer"
          },
          "losses": {
            "type": "integer"
          },
          "scored_goals": {
            "type": "integer"
          },
          "conceded_goals": {
            "type": "integer"
          },
          "points": {
            "type": "integer"
          }
        }
      }
    }
  }
}